---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vsphere-csi-controller
  namespace: {{ .Release.Namespace }}
labels:
  gardener.cloud/role: controlplane
  app: kubernetes
  role: csi-plugin-controller
spec:
  serviceName: vsphere-csi-controller
  revisionHistoryLimit: 1
  replicas: {{ .Values.replicas }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: vsphere-csi-controller
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        garden.sapcloud.io/role: controlplane
        gardener.cloud/role: controlplane
        app: vsphere-csi-controller
        role: vsphere-csi
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
    spec:
      automountServiceAccountToken: false
      {{- if .Values.vsphereWithKubernetes }}
      hostAliases:
        - ip: {{ .Values.supervisor.endpointIP }}
          hostnames:
            - "supervisor.default.svc"
      {{- end }}
      containers:
        - name: csi-attacher
          image: {{ index .Values.images "csi-attacher" }}
          args:
            - "--v=4"
            - "--timeout=300s"
            - "--csi-address=/csi/csi.sock"
            - "--leader-election"
            - "--kubeconfig=/var/lib/csi-attacher/kubeconfig"
{{- if .Values.resources.attacher }}
          resources:
{{ toYaml .Values.resources.attacher | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - name: csi-attacher
              mountPath: /var/lib/csi-attacher
{{- if .Values.resizerEnabled }}
        - name: csi-resizer
          image: {{ index .Values.images "csi-resizer" }}
          args:
            - "--v=4"
            - "--timeout=300s"
            - "--handle-volume-inuse-error=false"
            - "--csi-address=/csi/csi.sock"
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
            - "--leader-election"
            - --kubeconfig=/var/lib/csi-resizer/kubeconfig
{{- if .Values.resources.resizer }}
          resources:
{{ toYaml .Values.resources.resizer | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - name: csi-resizer
              mountPath: /var/lib/csi-resizer
{{- end }}
        - name: vsphere-csi-controller
          image: {{ index .Values.images "vsphere-csi-driver-controller" }}
          args:
            {{- if .Values.vsphereWithKubernetes }}
            - "--supervisor-fss-name=internal-feature-states.csi.vsphere.vmware.com"
            - "--supervisor-fss-namespace=$(CSI_NAMESPACE)"
            {{- end }}
            - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
            - "--fss-namespace=$(CSI_NAMESPACE)"
            - "--kubeconfig=/var/lib/vsphere-csi-controller/kubeconfig"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: X_CSI_MODE
              value: "controller"
            - name: LOGGER_LEVEL
              value: "{{ .Values.loggerLevel }}" # Options: DEVELOPMENT, PRODUCTION
            - name: INCLUSTER_CLIENT_QPS
              value: "100"
            - name: INCLUSTER_CLIENT_BURST
              value: "100"
            - name: CSI_NAMESPACE
              value: kube-system
            {{- if .Values.vsphereWithKubernetes }}
            - name: CLUSTER_FLAVOR
              value: "GUEST_CLUSTER"
            - name: SUPERVISOR_CLIENT_QPS
              value: "50"
            - name: SUPERVISOR_CLIENT_BURST
              value: "50"
            - name: GC_CONFIG
              value: /etc/cloud/pvcsi-config/cns-csi.conf
            {{- else }}
            - name: VSPHERE_CSI_CONFIG
              value: "/etc/cloud/csi-vsphere.conf"
            {{- end }}
{{- if .Values.resources.controller }}
          resources:
{{ toYaml .Values.resources.controller | indent 12 }}
{{- end }}
          volumeMounts:
            {{- if .Values.vsphereWithKubernetes }}
            - mountPath: /etc/cloud/pvcsi-provider
              name: pvcsi-provider-volume
              readOnly: true
            - mountPath: /etc/cloud/pvcsi-config
              name: pvcsi-config-volume
              readOnly: true
            {{- else }}
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
            {{- end }}
            - mountPath: /csi
              name: socket-dir
            - name: vsphere-csi-controller
              mountPath: /var/lib/vsphere-csi-controller
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
            - name: prometheus
              containerPort: 2112
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 3
        - name: vsphere-csi-syncer
          image: {{ index .Values.images "vsphere-csi-driver-syncer" }}
          args:
            - "--leader-election"
            - "--kubeconfig=/var/lib/csi-syncer/kubeconfig"
            - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
            - "--fss-namespace=$(CSI_NAMESPACE)"
            {{- if .Values.vsphereWithKubernetes }}
            - "--supervisor-fss-name=csi-feature-states"
            - "--supervisor-fss-namespace={{ .Values.supervisor.namespace }}"
            {{- end }}
          env:
            - name: FULL_SYNC_INTERVAL_MINUTES
              value: "30"
            - name: LOGGER_LEVEL
              value: "{{ .Values.loggerLevel }}" # Options: DEVELOPMENT, PRODUCTION
            - name: INCLUSTER_CLIENT_QPS
              value: "100"
            - name: INCLUSTER_CLIENT_BURST
              value: "100"
            - name: CSI_NAMESPACE
              value: kube-system
            {{- if .Values.vsphereWithKubernetes }}
            - name: CLUSTER_FLAVOR
              value: "GUEST_CLUSTER"
            - name: SUPERVISOR_CLIENT_QPS
              value: "50"
            - name: SUPERVISOR_CLIENT_BURST
              value: "50"
            - name: GC_CONFIG
              value: /etc/cloud/pvcsi-config/cns-csi.conf
            {{- else }}
            - name: VSPHERE_CSI_CONFIG
              value: "/etc/cloud/csi-vsphere.conf"
            {{- end }}
{{- if .Values.resources.syncer }}
          resources:
{{ toYaml .Values.resources.syncer | indent 12 }}
{{- end }}
          volumeMounts:
            - name: csi-syncer
              mountPath: /var/lib/csi-syncer
            {{- if .Values.vsphereWithKubernetes }}
            - mountPath: /etc/cloud/pvcsi-provider
              name: pvcsi-provider-volume
              readOnly: true
            - mountPath: /etc/cloud/pvcsi-config
              name: pvcsi-config-volume
              readOnly: true
            {{- else }}
            - mountPath: /etc/cloud
              name: vsphere-config-volume
              readOnly: true
            {{- end }}
        - name: csi-liveness-probe
          image: {{ index .Values.images "liveness-probe" }}
          args:
            - "--v=4"
            - "--csi-address=/csi/csi.sock"
{{- if .Values.resources.liveness }}
          resources:
{{ toYaml .Values.resources.liveness | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
        - name: csi-provisioner
          image: {{ index .Values.images "csi-provisioner" }}
          args:
            - "--v=4"
            - "--timeout=300s"
            - "--csi-address=/csi/csi.sock"
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
            {{- if not .Values.vsphereWithKubernetes }}
            - "--feature-gates=Topology=true"
            - "--strict-topology"
            {{- end }}
            - "--leader-election"
            - "--kubeconfig=/var/lib/csi-provisioner/kubeconfig"
            - "--default-fstype=ext4"
{{- if .Values.resources.provisioner }}
          resources:
{{ toYaml .Values.resources.provisioner | indent 12 }}
{{- end }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - name: csi-provisioner
              mountPath: /var/lib/csi-provisioner
{{- if .Values.volumesnapshots.enabled }}
        - name: csi-snapshotter
          image: {{ index .Values.images "csi-snapshotter" }}
          args:
            - "--v=4"
            - "--timeout=300s"
            - "--csi-address=/csi/csi.sock"
            - "--kubeconfig=/var/lib/csi-snapshotter/kubeconfig"
            - "--leader-election"
            - "--leader-election-namespace=kube-system"
            - "--snapshot-name-prefix={{ .Release.Namespace }}"
{{- if .Values.resources.snapshotter }}
          resources:
{{ toYaml .Values.resources.snapshotter | indent 12 }}
{{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: csi-snapshotter
              mountPath: /var/lib/csi-snapshotter
{{- end }}
      volumes:
        - name: vsphere-csi-controller
          secret:
            secretName: vsphere-csi-controller
        - name: csi-syncer
          secret:
            secretName: csi-syncer
        - name: csi-attacher
          secret:
            secretName: csi-attacher
        - name: csi-provisioner
          secret:
            secretName: csi-provisioner
        - name: csi-resizer
          secret:
            secretName: csi-resizer
{{- if .Values.volumesnapshots.enabled }}
        - name: csi-snapshotter
          secret:
            secretName: csi-snapshotter
{{- end }}
{{- if .Values.vsphereWithKubernetes }}
        - name: pvcsi-provider-volume
          secret:
            secretName: vsphere-pvcsi-provider-creds
        - name: pvcsi-config-volume
          configMap:
            name: vsphere-pvcsi-config
{{- else }}
        - name: vsphere-config-volume
          secret:
            secretName: csi-vsphere-config
{{- end }}
        - name: socket-dir
          emptyDir: {}
